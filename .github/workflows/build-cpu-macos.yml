# Copyright      2021  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# refer to https://github.com/actions/starter-workflows/pull/47/files

name: build-cpu-macos

on:
  push:
    branches:
      - master
  pull_request:
    types: [labeled]

env:
  BUILD_TYPE: Release

jobs:
  generate_build_matrix:
    # see https://github.com/pytorch/pytorch/pull/50633
    runs-on: macos-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generating build matrix
        id: set-matrix
        run: |
          # outputting for debugging purposes
          python scripts/github_actions/generate_build_matrix.py
          MATRIX=$(python scripts/github_actions/generate_build_matrix.py)
          echo "::set-output name=matrix::${MATRIX}"

  build-cpu-macos:
    if: github.event.label.name == 'ready' || github.event_name == 'push'
    needs: generate_build_matrix
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        ${{ fromJson(needs.generate_build_matrix.outputs.matrix) }}

    steps:
      # refer to https://github.com/actions/checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: Display date and time
        run: date

      - name: Display clang version
        run: |
          clang --version

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install PyTorch ${{ matrix.torch }}
        shell: bash
        run: |
          python3 -m pip install -qq --upgrade pip
          python3 -m pip install -qq wheel twine dataclasses
          python3 -m pip install -qq torch==${{ matrix.torch }}

          python3 -c "import torch; print('torch version:', torch.__version__)"

      - name: Build k2
        shell: bash
        run: |
          pwd
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF ..
          cat k2/csrc/version.h
          cat CMakeCache.txt

          make VERBOSE=1 -j2

      - name: Run tests
        shell: bash
        run: |
          cd build
          ctest --output-on-failure

      - name: Build wheel
        shell: bash
        run: |
          export K2_CMAKE_ARGS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF"
          export K2_MAKE_ARGS="-j2"
          python3 setup.py bdist_wheel
          ls -lh dist/
          ls -lh build/*

      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: torch-${{ matrix.torch }}-python-${{ matrix.python-version }}-macos-10.15-cpu
          path: dist/*.whl
