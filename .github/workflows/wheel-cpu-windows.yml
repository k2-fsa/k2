# Copyright (c)  2021  Xiaomi Corporation (authors: Fangjun Kuang)

name: Publish to PyPI - Windows CPU

on:
  push:
    tags:
      - '*'

concurrency:
  group: PyPI-windows-cpu-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release

jobs:
  PyPI-windows-cpu:
    if: ${{ false }} # Disable it at present. Users can install it from https://k2-fsa.org/nightly/index.html
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        torch: ["1.13.1"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # see https://github.com/microsoft/setup-msbuild
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install PyTorch ${{ matrix.torch }}
        run: |
          pip3 install -qq torch==${{ matrix.torch }}+cpu -f https://download.pytorch.org/whl/torch_stable.html numpy
          pip3 install -qq wheel twine dataclasses typing_extensions

          python3 -m torch.utils.collect_env


      - name: Build pip packages
        shell: bash
        env:
          K2_IS_FOR_PYPI: 1
          K2_IS_STABLE: 1
        run: |
          tag=$(python3 -c "import sys; print('.'.join(sys.version.split('.')[:2]))")
          export K2_CMAKE_ARGS="-DK2_WITH_CUDA=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE"
          python3 setup.py bdist_wheel --python-tag=py${tag}
          ls -lh dist/

      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: torch-${{ matrix.torch }}-python-${{ matrix.python-version }}-windows-cpu
          path: dist/*.whl

      - name: Publish wheels to PyPI
        if: ${{ github.repository_owner == 'k2-fsa' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/k2-*.whl
