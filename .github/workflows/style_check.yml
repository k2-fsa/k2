# Copyright (c)  2020  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors

name: style_check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade flake8
          pip install cpplint==1.4.5

      - name: Run flake8
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics

          #      - name: Install cppcheck
          #        run: |
          #          cd /tmp
          #          git clone --depth 1 https://github.com/danmar/cppcheck.git
          #          cd cppcheck
          #          mkdir build
          #          cd build
          #          cmake ..
          #          make -j
          #          sudo make install

      - name: Create Build Directory
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake -DCMAKE_CXX_CPPLINT=cpplint $GITHUB_WORKSPACE

      - name: Check style with cpplint
        shell: bash
        working-directory: ${{github.workspace}}
        run: ./scripts/check_style_cpplint.sh ${{runner.workspace}}/build 1

        #      - name: Run cppcheck
        #        shell: bash
        #        working-directory: ${{github.workspace}}
        #        run: ./scripts/run_cppcheck.sh ${{runner.workspace}}/build

      - name: Install clang-tidy
        run: |
          sudo apt-get install clang-tidy-9

      - name: Run clang-tidy
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          clang-tidy-9 --quiet -p ${{runner.workspace}}/build k2/csrc/*.cc k2/python/csrc/*.cc
