# Copyright (c)  2021  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors

name: nightly-cpu

on:
  schedule:
    # minute (0-59)
    # hour (0-23)
    # day of the month (1-31)
    # month (1-12)
    # day of the week (0-6)
    # nightly build at 14:00 UTC time every day
    - cron: "0 14 * * *"

env:
  BUILD_TYPE: Release

jobs:
  nightly-cpu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        # Python 3.9 is for PyTorch 1.7.1, 1.8.0, 1.8.1
        python-version: [3.6, 3.7, 3.8, 3.9]
        torch: ["1.5.0", "1.5.1", "1.6.0", "1.7.0", "1.7.1", "1.8.0", "1.8.1"]
        exclude:
          - python-version: 3.9 # exclude Python 3.9 for [1.5.0, 1.5.1, 1.6.0, 1.7.0]
            torch: "1.5.0"
          - python-version: 3.9
            torch: "1.5.1"
          - python-version: 3.9
            torch: "1.6.0"
          - python-version: 3.9
            torch: "1.7.0"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Display date and time
        run: date

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install GCC 7
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install -y gcc-7 g++-7
          echo "CC=/usr/bin/gcc-7" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-7" >> $GITHUB_ENV

      - name: Display GCC version
        run: |
          gcc --version

      - name: Display clang version
        if: startsWith(matrix.os, 'macos')
        run: |
          clang --version

      - name: Install PyTorch ${{ matrix.torch }}
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          python3 -m pip install -qq --upgrade pip
          python3 -m pip install -qq wheel twine
          python3 -m pip install -qq torch==${{ matrix.torch }}+cpu -f https://download.pytorch.org/whl/torch_stable.html

          python3 -c "import torch; print('torch version:', torch.__version__)"

      - name: Install PyTorch ${{ matrix.torch }}
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          python3 -m pip install -qq --upgrade pip
          python3 -m pip install -qq wheel twine
          python3 -m pip install -qq torch==${{ matrix.torch }}

      - name: Build pip packages
        shell: bash
        run: |
          export K2_CMAKE_ARGS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF"
          export K2_MAKE_ARGS="-j2"
          python3 setup.py bdist_wheel
          ls -lh dist/

      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: torch-${{ matrix.torch }}-python-${{ matrix.python-version }}-${{ matrix.os }}
          path: dist/*.whl

      - name: Copy wheels to k2-fsa.org
        run: |
          user=${{ secrets.K2_USERNAME }}
          server=${{ secrets.K2_HOST }}
          port=${{ secrets.K2_PORT }}
          echo "${{ secrets.K2_KEY }}" > id_rsa && chmod 600 id_rsa
          scp -P $port -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i id_rsa dist/*.whl $user@$server:~/nightly/whl
          rm id_rsa
