# Copyright      2021  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# refer to https://github.com/actions/starter-workflows/pull/47/files

name: build-cpu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release

jobs:
  build-cpu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        torch: ["1.5.0", "1.5.1", "1.6.0", "1.7.0", "1.7.1", "1.8.0", "1.8.1", "1.9.0"]
        # Python 3.9 is for PyTorch 1.7.1, 1.8.x, 1.9.0,
        python-version: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - python-version: 3.9 # exclude Python 3.9 for [1.5.0, 1.5.1, 1.6.0, 1.7.0]
            torch: "1.5.0"
          - python-version: 3.9
            torch: "1.5.1"
          - python-version: 3.9
            torch: "1.6.0"
          - python-version: 3.9
            torch: "1.7.0"

    steps:
      # refer to https://github.com/actions/checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: Display date and time
        run: date

      - name: Install GCC 7
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install -y gcc-7 g++-7
          echo "CC=/usr/bin/gcc-7" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-7" >> $GITHUB_ENV

      - name: Display clang version
        if: startsWith(matrix.os, 'macos')
        run: |
          clang --version

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install PyTorch ${{ matrix.torch }}
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          python3 -m pip install -qq --upgrade pip
          python3 -m pip install -qq wheel twine
          python3 -m pip install -qq torch==${{ matrix.torch }}+cpu -f https://download.pytorch.org/whl/torch_stable.html

          python3 -c "import torch; print('torch version:', torch.__version__)"

      - name: Install PyTorch ${{ matrix.torch }}
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          python3 -m pip install -qq --upgrade pip
          python3 -m pip install -qq wheel twine
          python3 -m pip install -qq torch==${{ matrix.torch }}

          python3 -c "import torch; print('torch version:', torch.__version__)"

      - name: Configure CMake
        shell: bash
        run: |
          pwd
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF ..
          cat k2/csrc/version.h

      - name: Build k2
        shell: bash
        run: |
          export K2_CMAKE_ARGS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF"
          export K2_MAKE_ARGS="-j2"
          python3 setup.py bdist_wheel
          ls -lh dist/
          ls -lh build/*

      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: torch-${{ matrix.torch }}-python-${{ matrix.python-version }}-${{ matrix.os }}-cpu
          path: dist/*.whl
